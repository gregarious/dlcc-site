/* 
 * layout.scss
 * 
 * Styles for main page layout. Layout specific to a module (e.g. home page
 * content) lives in a file specific to that module. 
 */

@import "constants.scss";
@import "compass/css3";

// precalculated pixel widths for site sections
$w-narrow-sidebar: $nav-button-width + (2 * $nav-button-padding);
$w-narrow-main: $w-narrow - $w-narrow-sidebar;

$w-standard-sidebar: (2 * $nav-button-width) + (3 * $nav-button-padding);
$w-standard-main: $w-standard - $w-standard-sidebar;

$w-wide-sidebar: (2 * $nav-button-width) + (3 * $nav-button-padding);
$w-wide-main: $w-wide - $w-wide-sidebar;

// border box all the things!
* {
    @include box-sizing(border-box);
}

// keep header the same height as the top header images (at most)
.page-header {
    max-height: $top-header-image-height;
    overflow: hidden;
}

// keeps everything but header in a fixed width container
.page-wrap {
    margin: 0 auto;
    position: relative;
    height: 100%;

    width: $w-mobile;
    @media only screen and (min-width: $w-narrow) {
        width: $w-narrow;
    }
    @media only screen and (min-width: $w-standard) {
        width: $w-standard;
    }
    @media only screen and (min-width: $w-wide) {
        width: $w-wide;
    }   
}

/*  Styles for the page's two main columns. A lot of this is to keep keep
    the column heights equal. See 
    http://matthewjamestaylor.com/blog/equal-height-columns-cross-browser-css-no-hacks
    for more details on the technique used for equal heights here */
.page-columns-wrap {
    width: 100%;
    @extend .clearfix;
}

.page-column {
    float: left;
    overflow: hidden;   // needed for equal height columns
}

// styles to set the width of the primary column
.page-column-primary {
    width: 100%;

    @media only screen and (min-width: $w-narrow) {
        width: $w-narrow-main;
        position: relative;        
        
        // counteracts the equal-column background hackery
        left: $w-narrow-sidebar;
    }
    @media only screen and (min-width: $w-standard) {
        width: $w-standard-main;
        
        // counteract the equal-column background hackery
        left: $w-standard-sidebar;
    }
    @media only screen and (min-width: $w-wide) {
        width: $w-wide-main;
        // sidebar width is the same as standard, so no need for new `left` value
    }
}

// styles to set the width of the secondary column
.page-column-secondary {
    width: 100%;

    @media only screen and (min-width: $w-narrow) {
        width: $w-narrow-sidebar;

        // counteract the equal-column background hackery
        position: relative;
        left: $w-narrow-sidebar;
    }
    @media only screen and (min-width: $w-standard) {
        width: $w-standard-sidebar;

        // counteract the equal-column background hackery
        left: $w-standard-sidebar;
    }
    // sidebar width is the same as standard, so no need for new `left` value
}

/* each page column needs to be surrounded by a div as wide as the page
    to hold it's background color */
.page-column-background {
    float: left;
    width: 100%
}

// styles for secondary colummn background
.page-column-background-secondary {
    background-color: $light-green2;
    position: relative;

    @media only screen and (min-width: $w-narrow) {
        overflow: hidden;
    }
}

// special styles for inner background div
.page-column-background-primary {
    background-color: white;

    // part of the equal-column background hackery
    @media only screen and (min-width: $w-narrow) {
        right: $w-narrow-sidebar;
        position: relative;
    }
    @media only screen and (min-width: $w-standard) {
        right: $w-standard-sidebar;
    }
}

// absolutely position the tagline within the primary column header
.primary-header {
    position: relative;
    
    > .tagline-home {
        top: 0;
        position: absolute;
    }
}

// scoot primary content down to leave room for absolutely positioned page heading
.primary-content {
    margin-top: 46px;   // enough space to push content below heading
    padding: 1em 1.25em;
    position: relative;

    @media only screen and (min-width: $w-narrow) {
        margin-top: 30px;   // page heading is shorter for non-mobile sizes
    }
}

// add a bit of a margin around primary content
.primary-content {
    margin: inherit 2%;
}